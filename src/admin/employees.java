/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package admin;
import login_register.*;
import login_register.distributor_landing;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import javax.swing.JOptionPane;
/**
 *
 * @author varsh
 */
public class employees extends javax.swing.JFrame {

    /**
     * Creates new form welcome_page
     */
    public employees() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        admin_button1 = new javax.swing.JButton();
        username_dis2 = new javax.swing.JTextField();
        main_panel = new javax.swing.JPanel();
        title1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        back_button = new javax.swing.JButton();
        search_button = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        e_id = new javax.swing.JTextField();
        pos = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        contact = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        wareh = new javax.swing.JTextField();
        insert_button = new javax.swing.JButton();
        delete_button = new javax.swing.JButton();
        update_button = new javax.swing.JButton();
        clear_button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        title.setFont(new java.awt.Font("Segoe UI Black", 1, 32)); // NOI18N
        title.setForeground(new java.awt.Color(0, 204, 204));
        title.setText("PHARMACY SUPPLY CHAIN");

        admin_button1.setBackground(new java.awt.Color(0, 204, 204));
        admin_button1.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        admin_button1.setForeground(new java.awt.Color(255, 255, 255));
        admin_button1.setText("ADMIN");
        admin_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_button1ActionPerformed(evt);
            }
        });

        username_dis2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        main_panel.setBackground(new java.awt.Color(255, 255, 255));

        title1.setFont(new java.awt.Font("Segoe UI Black", 1, 32)); // NOI18N
        title1.setForeground(new java.awt.Color(0, 204, 204));
        title1.setText("EMPLOYEES");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 204));
        jLabel2.setText("ID");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 204));
        jLabel3.setText("Name");

        name.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        back_button.setBackground(new java.awt.Color(0, 204, 204));
        back_button.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        back_button.setForeground(new java.awt.Color(255, 255, 255));
        back_button.setText("‚Üê");
        back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_buttonActionPerformed(evt);
            }
        });

        search_button.setBackground(new java.awt.Color(0, 204, 204));
        search_button.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        search_button.setForeground(new java.awt.Color(255, 255, 255));
        search_button.setText("SEARCH");
        search_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_buttonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 204, 204));
        jLabel4.setText("Warehouse ID");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 204));

        e_id.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        e_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_idActionPerformed(evt);
            }
        });

        pos.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        pos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                posActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 204, 204));
        jLabel7.setText("Position");

        contact.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 204, 204));
        jLabel8.setText("Contact Number");

        wareh.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        wareh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warehActionPerformed(evt);
            }
        });

        insert_button.setBackground(new java.awt.Color(0, 204, 204));
        insert_button.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        insert_button.setForeground(new java.awt.Color(255, 255, 255));
        insert_button.setText("INSERT");
        insert_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert_buttonActionPerformed(evt);
            }
        });

        delete_button.setBackground(new java.awt.Color(0, 204, 204));
        delete_button.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        delete_button.setForeground(new java.awt.Color(255, 255, 255));
        delete_button.setText("DELETE");
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttonActionPerformed(evt);
            }
        });

        update_button.setBackground(new java.awt.Color(0, 204, 204));
        update_button.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        update_button.setForeground(new java.awt.Color(255, 255, 255));
        update_button.setText("UPDATE");
        update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_buttonActionPerformed(evt);
            }
        });

        clear_button.setBackground(new java.awt.Color(0, 204, 204));
        clear_button.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        clear_button.setForeground(new java.awt.Color(255, 255, 255));
        clear_button.setText("CLEAR");
        clear_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout main_panelLayout = new javax.swing.GroupLayout(main_panel);
        main_panel.setLayout(main_panelLayout);
        main_panelLayout.setHorizontalGroup(
            main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(back_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(title1)
                .addGap(24, 24, 24))
            .addGroup(main_panelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(main_panelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(main_panelLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(contact))
                            .addGroup(main_panelLayout.createSequentialGroup()
                                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addGroup(main_panelLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5)))
                                .addGap(106, 106, 106)
                                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pos)
                                    .addComponent(name)
                                    .addComponent(e_id)))
                            .addGroup(main_panelLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(46, 46, 46)
                                .addComponent(wareh)))
                        .addGap(39, 39, 39))
                    .addGroup(main_panelLayout.createSequentialGroup()
                        .addComponent(insert_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(update_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(search_button)
                        .addGap(12, 12, 12)
                        .addComponent(delete_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clear_button)
                        .addContainerGap(27, Short.MAX_VALUE))))
        );
        main_panelLayout.setVerticalGroup(
            main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main_panelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(title1)
                    .addComponent(back_button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(e_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(main_panelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(51, 51, 51))
                    .addGroup(main_panelLayout.createSequentialGroup()
                        .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(wareh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search_button)
                    .addComponent(insert_button)
                    .addComponent(delete_button)
                    .addComponent(update_button)
                    .addComponent(clear_button))
                .addGap(16, 16, 16))
        );

        getContentPane().add(main_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 670, 450));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/background.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, -16, 820, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void admin_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin_button1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_admin_button1ActionPerformed

    private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_buttonActionPerformed
        // TODO add your handling code here:
        admin_landing a = new admin_landing();
        dispose();
        a.setVisible(true);
        
    }//GEN-LAST:event_back_buttonActionPerformed

    private void search_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_buttonActionPerformed
        String eid=e_id.getText();
        searchEmployee(eid);

    }//GEN-LAST:event_search_buttonActionPerformed

    private void e_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_idActionPerformed

    private void posActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_posActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_posActionPerformed

    private void contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactActionPerformed

    private void warehActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warehActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_warehActionPerformed

    private void insert_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert_buttonActionPerformed
        String eid=e_id.getText();
        String e_name=name.getText();
        String position=pos.getText();
        int contact_info= Integer.parseInt(contact.getText());
        String warehouse_id=wareh.getText();
        insertEmployee(eid,e_name,position,contact_info,warehouse_id);
       

    }//GEN-LAST:event_insert_buttonActionPerformed
   
    private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed
  
        String eid=e_id.getText();
        deleteEmployee(eid);
    }//GEN-LAST:event_delete_buttonActionPerformed

    private void update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_buttonActionPerformed
        String eid=e_id.getText();
        String e_name=name.getText();
        String position=pos.getText();
        int contact_info= Integer.parseInt(contact.getText());
        String warehouse_id=wareh.getText();
        updateEmployee(eid,e_name,position,contact_info,warehouse_id);
    }//GEN-LAST:event_update_buttonActionPerformed

    private void clear_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_buttonActionPerformed
        e_id.setText("");
        name.setText("");
        pos.setText("");
        contact.setText("");
        wareh.setText("");
    }//GEN-LAST:event_clear_buttonActionPerformed
       

    /**
     * @param args the command line arguments
     */
   
    private void updateEmployee(String id,String name_e,String posi,int contact,String ware_id){
           Connection connection = null;
        PreparedStatement preparedStatement = null;

        try {
            connection = DriverManager.getConnection(
                    "jdbc:oracle:thin:@localhost:1521:xe", "system", "dor");

            // Prepare SQL update statement
            String updateSQL = "UPDATE Employee SET name=?, position=?, phone_number=?, warehouse_id=? WHERE employee_id=?";
            preparedStatement = connection.prepareStatement(updateSQL);

   
            // Set values for parameters in the prepared statement
            preparedStatement.setString(1, name_e);
            preparedStatement.setString(2, posi);
            preparedStatement.setInt(3, contact);
            preparedStatement.setString(4, ware_id);
            preparedStatement.setString(5, id);

            // Execute the update statement
            int rowsAffected = preparedStatement.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Employee updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Failed to update employee.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Close the statement
            if (preparedStatement != null) {
                try {
                    preparedStatement.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }
           
    private void insertEmployee(String id,String name_e,String posi,int contact,String ware_id){
        Connection connection = null;
    PreparedStatement preparedStatement = null;

    try {
        // Establish connection
        connection = DriverManager.getConnection(
                "jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger");

        // Prepare SQL insert statement
        String insertSQL = "INSERT INTO Employee(employee_id, name, position, phone_number, warehouse_id) VALUES (?, ?, ?, ?, ?)";
        preparedStatement = connection.prepareStatement(insertSQL);

        // Set values for parameters in the prepared statement
        preparedStatement.setString(1, id);
        preparedStatement.setString(2, name_e);
        preparedStatement.setString(3, posi);
        preparedStatement.setInt(4, contact);
        preparedStatement.setString(5, ware_id);

        // Execute the insert statement
        int rowsAffected = preparedStatement.executeUpdate();

        // Check if the insertion was successful
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Employee inserted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Failed to insert data.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException ex) {
        String errorMessage = "Error: " + ex.getMessage();
        SQLException nextException = ex.getNextException();

        while (nextException != null) {
            errorMessage += "\nNext Exception: " + nextException.getMessage();
            nextException = nextException.getNextException();
        }

        JOptionPane.showMessageDialog(this, errorMessage, "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    } finally {
        // Close the PreparedStatement and Connection
        try {
            if (preparedStatement != null) {
                preparedStatement.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException ex) {
            String errorMessage = "Error closing resources: " + ex.getMessage();
            JOptionPane.showMessageDialog(this, errorMessage, "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }
    }
           
    private void deleteEmployee(String id){
        Connection connection = null;
        PreparedStatement preparedStatement = null;

        try {
            connection = DriverManager.getConnection(
                    "jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger");

            String deleteSQL = "DELETE FROM Employee WHERE employee_id=?";
            preparedStatement = connection.prepareStatement(deleteSQL);
            preparedStatement.setString(1, id);

            int rowsAffected = preparedStatement.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Employee deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "No record found with EID: " + id, "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Close the statement
            if (preparedStatement != null) {
                try {
                    preparedStatement.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }
   
    private void searchEmployee(String e_id) {
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        ResultSet resultSet = null;

        try {
            // Establish connection
            connection = DriverManager.getConnection(
                    "jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger");

            // Prepare SQL select statement
            String selectSQL = "SELECT * FROM Employee WHERE employee_id=?";
            preparedStatement = connection.prepareStatement(selectSQL);
            preparedStatement.setString(1, e_id);

            // Execute the query
            resultSet = preparedStatement.executeQuery();

            if (resultSet.next()) {
                // Found the record, display it
                String ename = resultSet.getString("name");
                String posi= resultSet.getString("position");
                String ware_h= resultSet.getString("warehouse_id");
                int cont= resultSet.getInt("phone_number");
               

                name.setText(ename);
                pos.setText(posi);
                contact.setText(Integer.toString(cont));
                wareh.setText(ware_h);

            } else {
                JOptionPane.showMessageDialog(this,
                        "Employee not found for EID: " + e_id,
                        "Employee Not Found", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,
                    "Error: " + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Close resultSet, preparedStatement, and connection
            if (resultSet != null) {
                try {
                    resultSet.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
            if (preparedStatement != null) {
                try {
                    preparedStatement.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton admin_button1;
    private javax.swing.JButton back_button;
    private javax.swing.JButton clear_button;
    private javax.swing.JTextField contact;
    private javax.swing.JButton delete_button;
    private javax.swing.JTextField e_id;
    private javax.swing.JButton insert_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel main_panel;
    private javax.swing.JTextField name;
    private javax.swing.JTextField pos;
    private javax.swing.JButton search_button;
    private javax.swing.JLabel title;
    private javax.swing.JLabel title1;
    private javax.swing.JButton update_button;
    private javax.swing.JTextField username_dis2;
    private javax.swing.JTextField wareh;
    // End of variables declaration//GEN-END:variables
}
