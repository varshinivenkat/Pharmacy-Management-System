/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package suppliers;
import admin.*;
import login_register.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import javax.swing.JOptionPane;

/**
 *
 * @author varsh
 */
public class shipment_details extends javax.swing.JFrame {

    /**
     * Creates new form welcome_page
     */
    public shipment_details() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        title = new javax.swing.JLabel();
        admin_button1 = new javax.swing.JButton();
        username_dis2 = new javax.swing.JTextField();
        main_panel = new javax.swing.JPanel();
        title1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        qua = new javax.swing.JTextField();
        back_button = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        med_id = new javax.swing.JTextField();
        Mfd = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        insert_button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        title.setFont(new java.awt.Font("Segoe UI Black", 1, 32)); // NOI18N
        title.setForeground(new java.awt.Color(0, 204, 204));
        title.setText("PHARMACY SUPPLY CHAIN");

        admin_button1.setBackground(new java.awt.Color(0, 204, 204));
        admin_button1.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        admin_button1.setForeground(new java.awt.Color(255, 255, 255));
        admin_button1.setText("ADMIN");
        admin_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_button1ActionPerformed(evt);
            }
        });

        username_dis2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        main_panel.setBackground(new java.awt.Color(255, 255, 255));

        title1.setFont(new java.awt.Font("Segoe UI Black", 1, 32)); // NOI18N
        title1.setForeground(new java.awt.Color(0, 204, 204));
        title1.setText("SHIPMENT DETAILS");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 204));
        jLabel2.setText("Medicine Id");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 204));
        jLabel3.setText("Quantity");

        qua.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        qua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quaActionPerformed(evt);
            }
        });

        back_button.setBackground(new java.awt.Color(0, 204, 204));
        back_button.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        back_button.setForeground(new java.awt.Color(255, 255, 255));
        back_button.setText("‚Üê");
        back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_buttonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 204));

        med_id.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        med_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                med_idActionPerformed(evt);
            }
        });

        Mfd.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Mfd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MfdActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 204, 204));
        jLabel7.setText("Mfd");

        insert_button.setBackground(new java.awt.Color(0, 204, 204));
        insert_button.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        insert_button.setForeground(new java.awt.Color(255, 255, 255));
        insert_button.setText("INSERT");
        insert_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout main_panelLayout = new javax.swing.GroupLayout(main_panel);
        main_panel.setLayout(main_panelLayout);
        main_panelLayout.setHorizontalGroup(
            main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, main_panelLayout.createSequentialGroup()
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(main_panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(title1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, main_panelLayout.createSequentialGroup()
                        .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(main_panelLayout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addComponent(jLabel5))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, main_panelLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel7))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(qua, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                                .addComponent(med_id))
                            .addComponent(Mfd, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(67, 67, 67))
            .addGroup(main_panelLayout.createSequentialGroup()
                .addGap(264, 264, 264)
                .addComponent(insert_button)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        main_panelLayout.setVerticalGroup(
            main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main_panelLayout.createSequentialGroup()
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(main_panelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(back_button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, main_panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(title1)))
                .addGap(75, 75, 75)
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(med_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(32, 32, 32)
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(main_panelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addComponent(qua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Mfd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(insert_button)
                .addGap(46, 46, 46))
        );

        getContentPane().add(main_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 670, 450));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/background.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, -16, 820, 480));

        pack();
    }// </editor-fold>                        

    private void quaActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
    }                                  

    private void admin_button1ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                            

    private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        shipment s= new shipment();
        dispose();
        s.setVisible(true);
       
    }                                          

    private void med_idActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    }                                      

    private void MfdActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
    }                                  

    private void insert_buttonActionPerformed(java.awt.event.ActionEvent evt) {                                              
    // Get the values from the input fields                                          
    String medid = med_id.getText();
    String quat = qua.getText();
    String mfd = Mfd.getText();
   
    // Database connection parameters
    String url = "jdbc:oracle:thin:@localhost:1521:orcl";
    String user = "scott";
    String password = "tiger";
   
    // SQL queries for warehouse and warehouse_details
    String warehouseQuery = "SELECT wd.quantity, w.capacity " +
                            "FROM warehouse_details wd " +
                            "JOIN warehouse w ON wd.warehouse_id = w.warehouse_id " +
                            "WHERE wd.medicine_id = ?";
    
    String updateWarehouseDetailsSQL = "UPDATE warehouse_details SET quantity = quantity + ? " +
                                       "WHERE warehouse_id = ? AND medicine_id = ?";
    
    String insertWarehouseDetailsSQL = "INSERT INTO warehouse_details (warehouse_id, medicine_id, quantity) " +
                                       "VALUES (?, ?, ?)";
    
    String shipmentDetailsSQL = "INSERT INTO shipment_details(shipment_id, supplier_id, medicine_id, quantity, mfd) " +
                                "VALUES (?, ?, ?, ?, TO_DATE(?,'YYYY-MM-DD'))";

    try (Connection connection = DriverManager.getConnection(url, user, password);
         PreparedStatement warehouseStmt = connection.prepareStatement(warehouseQuery);
         PreparedStatement updateStmt = connection.prepareStatement(updateWarehouseDetailsSQL);
         PreparedStatement insertStmt = connection.prepareStatement(insertWarehouseDetailsSQL);
         PreparedStatement shipmentDetailsStmt = connection.prepareStatement(shipmentDetailsSQL)) {
       
        // Set the values to be inserted into shipment_details table
        String shipmentId = SessionManager.getshipid();
        String supplierId = SessionManager.getUsername();
        
        shipmentDetailsStmt.setString(1, shipmentId);
        shipmentDetailsStmt.setString(2, supplierId);
        shipmentDetailsStmt.setString(3, medid);
        shipmentDetailsStmt.setInt(4, Integer.parseInt(quat));
        shipmentDetailsStmt.setString(5, mfd);

        // Execute the SQL statement for shipment_details table
        int rowsInsertedShipmentDetails = shipmentDetailsStmt.executeUpdate();

        if (rowsInsertedShipmentDetails > 0) {
            JOptionPane.showMessageDialog(this, "Shipment details were inserted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Failed to insert shipment details.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Check the warehouse capacity before updating or inserting
        warehouseStmt.setString(1, medid);
        ResultSet rs = warehouseStmt.executeQuery();
        
        if (rs.next()) {
            int currentQuantity = rs.getInt("quantity");
            int warehouseCapacity = rs.getInt("capacity");
            int requestedQuantity = Integer.parseInt(quat);
            
            if (currentQuantity + requestedQuantity > warehouseCapacity) {
                JOptionPane.showMessageDialog(this, "Warehouse capacity exceeded. Cannot add more.");
                return;
            }
            
            // Check if the medicine exists in warehouse_details
            if (currentQuantity > 0) {
                // Update existing medicine quantity
                updateStmt.setInt(1, requestedQuantity);
                updateStmt.setString(2, SessionManager.getWarehouseid()); // Replace with actual warehouse ID
                updateStmt.setString(3, medid);
                updateStmt.executeUpdate();
            } else {
                // Insert new row in warehouse_details
                insertStmt.setString(1, SessionManager.getWarehouseid()); // Replace with actual warehouse ID
                insertStmt.setString(2, medid);
                insertStmt.setInt(3, requestedQuantity);
                insertStmt.executeUpdate();
            }
        } else {
            JOptionPane.showMessageDialog(this, "No matching records found for medicine ID: " + medid);
        }
        
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid quantity format: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}

  
                                 



    // Variables declaration - do not modify                    
    private javax.swing.JTextField Mfd;
    private javax.swing.JButton admin_button1;
    private javax.swing.JButton back_button;
    private javax.swing.JButton insert_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel main_panel;
    private javax.swing.JTextField med_id;
    private javax.swing.JTextField qua;
    private javax.swing.JLabel title;
    private javax.swing.JLabel title1;
    private javax.swing.JTextField username_dis2;
    // End of variables declaration                  
}

